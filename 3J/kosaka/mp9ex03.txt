mp9ex03.txt
s12083 3J18 五味京祐

1.課題

2.使用したプログラム
#include <3048fone.h>
#include "h8_3048fone.h"

volatile int count1=-1;/*LED0用カウンタ　-1の時は休止中*/
volatile int count2=-1;/*LED1用カウンタ　-1の時は休止中*/
volatile int count3=-1;

void putHello(int i){
	char hello[]="                Hello, everyone!                ";
	int j;

	LCD_gotoxy(0,0);
	for(j=0;j<16;j++) {
		LCD_printf("%c",hello[i+j]);
	}
}


main()
{
	initLed();
	initPushSW();/*PushSWの初期化*/
	initTimer1Int(10000); /*時間割り込み10000μsec=10msec ch1使用*/
	E_INT();        /*CPU割り込み許可*/
	startTimer1();  /*時間割り込みタイマスタートch1*/
	initLCD();
	while(1) {
		if ((count1==-1 || 50<count1) && checkPushSW(0)==1) {
			count1=0;
			turnOnLed(0);
		} else if (100<count1 && count1<200) {
			turnOffLed(0);
		} else if (200<count1 && count1<300) { /*200カウントで2秒経過*/
			turnOnLed(0);
		} else if (300<count1) {
			count1=-1;
			turnOffLed(0);
		}
		
		if ((count2==-1 || 50<count2) && checkPushSW(1)==1) {
			count2=0;
			turnOnLed(1);
		} else if (100<count2 && count2<200) {
			turnOffLed(1);
		} else if (200<count2 && count2<300) { /*200カウントで2秒経過*/
			turnOnLed(1);
		} else if (200<count2) { /*200カウントで2秒経過*/
			count2=-1;
			turnOffLed(1);
		}
		
		if ((count3==-1 || 50<count3) && checkPushSW(2)==1 ){
			count3=0;
		} else if(320<count3){
			count3=-1;
		}
		if (count3!=-1 && count3%10==0){
			putHello(count3/10);
		}
	}
}


#pragma asm
	.SECTION    MYVEC, DATA, LOCATE=H'000070
	.ORG        H'000070  ;IMIA1
	.DATA.L     _TimerIntFunc
	.SECTION    P,CODE,ALIGN=2 ;これを忘れてはいけない
#pragma endasm

#pragma interrupt (TimerIntFunc)
void TimerIntFunc() /*タイマ割り込みルーチン*/
{
	static int tick=0;
	clearTimer1Flag();  /*タイマステータスフラグのクリア 忘れないこと*/
	if (count1!=-1) count1++;
	if (count2!=-1) count2++;
	if (count3!=-1) count3++;
}

3.考察
initLCDでLCDの初期化を行い，
LCD_gotoxyで表示の開始位置を指定することができる．

4.まとめ
LCDへの表示の仕方が分かった．
表示位置は自動的にずれていくから，同じ位置に表示し続けたい場合は
毎回LCD_gotoxyで同じ位置を指定する．